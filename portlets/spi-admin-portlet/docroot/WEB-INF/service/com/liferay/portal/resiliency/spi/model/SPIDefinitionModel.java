/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.liferay.portal.resiliency.spi.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.model.AuditedModel;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

import java.util.Date;

/**
 * The base model interface for the SPIDefinition service. Represents a row in the &quot;SPIDefinition&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link com.liferay.portal.resiliency.spi.model.impl.SPIDefinitionModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link com.liferay.portal.resiliency.spi.model.impl.SPIDefinitionImpl}.
 * </p>
 *
 * @author Michael C. Han
 * @see SPIDefinition
 * @see com.liferay.portal.resiliency.spi.model.impl.SPIDefinitionImpl
 * @see com.liferay.portal.resiliency.spi.model.impl.SPIDefinitionModelImpl
 * @generated
 */
public interface SPIDefinitionModel extends AuditedModel,
	BaseModel<SPIDefinition> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a s p i definition model instance should use the {@link SPIDefinition} interface instead.
	 */

	/**
	 * Returns the primary key of this s p i definition.
	 *
	 * @return the primary key of this s p i definition
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this s p i definition.
	 *
	 * @param primaryKey the primary key of this s p i definition
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the spi definition ID of this s p i definition.
	 *
	 * @return the spi definition ID of this s p i definition
	 */
	public long getSpiDefinitionId();

	/**
	 * Sets the spi definition ID of this s p i definition.
	 *
	 * @param spiDefinitionId the spi definition ID of this s p i definition
	 */
	public void setSpiDefinitionId(long spiDefinitionId);

	/**
	 * Returns the company ID of this s p i definition.
	 *
	 * @return the company ID of this s p i definition
	 */
	@Override
	public long getCompanyId();

	/**
	 * Sets the company ID of this s p i definition.
	 *
	 * @param companyId the company ID of this s p i definition
	 */
	@Override
	public void setCompanyId(long companyId);

	/**
	 * Returns the user ID of this s p i definition.
	 *
	 * @return the user ID of this s p i definition
	 */
	@Override
	public long getUserId();

	/**
	 * Sets the user ID of this s p i definition.
	 *
	 * @param userId the user ID of this s p i definition
	 */
	@Override
	public void setUserId(long userId);

	/**
	 * Returns the user uuid of this s p i definition.
	 *
	 * @return the user uuid of this s p i definition
	 * @throws SystemException if a system exception occurred
	 */
	@Override
	public String getUserUuid() throws SystemException;

	/**
	 * Sets the user uuid of this s p i definition.
	 *
	 * @param userUuid the user uuid of this s p i definition
	 */
	@Override
	public void setUserUuid(String userUuid);

	/**
	 * Returns the user name of this s p i definition.
	 *
	 * @return the user name of this s p i definition
	 */
	@AutoEscape
	@Override
	public String getUserName();

	/**
	 * Sets the user name of this s p i definition.
	 *
	 * @param userName the user name of this s p i definition
	 */
	@Override
	public void setUserName(String userName);

	/**
	 * Returns the create date of this s p i definition.
	 *
	 * @return the create date of this s p i definition
	 */
	@Override
	public Date getCreateDate();

	/**
	 * Sets the create date of this s p i definition.
	 *
	 * @param createDate the create date of this s p i definition
	 */
	@Override
	public void setCreateDate(Date createDate);

	/**
	 * Returns the modified date of this s p i definition.
	 *
	 * @return the modified date of this s p i definition
	 */
	@Override
	public Date getModifiedDate();

	/**
	 * Sets the modified date of this s p i definition.
	 *
	 * @param modifiedDate the modified date of this s p i definition
	 */
	@Override
	public void setModifiedDate(Date modifiedDate);

	/**
	 * Returns the name of this s p i definition.
	 *
	 * @return the name of this s p i definition
	 */
	@AutoEscape
	public String getName();

	/**
	 * Sets the name of this s p i definition.
	 *
	 * @param name the name of this s p i definition
	 */
	public void setName(String name);

	/**
	 * Returns the connector address of this s p i definition.
	 *
	 * @return the connector address of this s p i definition
	 */
	@AutoEscape
	public String getConnectorAddress();

	/**
	 * Sets the connector address of this s p i definition.
	 *
	 * @param connectorAddress the connector address of this s p i definition
	 */
	public void setConnectorAddress(String connectorAddress);

	/**
	 * Returns the connector port of this s p i definition.
	 *
	 * @return the connector port of this s p i definition
	 */
	public int getConnectorPort();

	/**
	 * Sets the connector port of this s p i definition.
	 *
	 * @param connectorPort the connector port of this s p i definition
	 */
	public void setConnectorPort(int connectorPort);

	/**
	 * Returns the description of this s p i definition.
	 *
	 * @return the description of this s p i definition
	 */
	@AutoEscape
	public String getDescription();

	/**
	 * Sets the description of this s p i definition.
	 *
	 * @param description the description of this s p i definition
	 */
	public void setDescription(String description);

	/**
	 * Returns the jvm arguments of this s p i definition.
	 *
	 * @return the jvm arguments of this s p i definition
	 */
	@AutoEscape
	public String getJvmArguments();

	/**
	 * Sets the jvm arguments of this s p i definition.
	 *
	 * @param jvmArguments the jvm arguments of this s p i definition
	 */
	public void setJvmArguments(String jvmArguments);

	/**
	 * Returns the portlet IDs of this s p i definition.
	 *
	 * @return the portlet IDs of this s p i definition
	 */
	@AutoEscape
	public String getPortletIds();

	/**
	 * Sets the portlet IDs of this s p i definition.
	 *
	 * @param portletIds the portlet IDs of this s p i definition
	 */
	public void setPortletIds(String portletIds);

	/**
	 * Returns the servlet context names of this s p i definition.
	 *
	 * @return the servlet context names of this s p i definition
	 */
	@AutoEscape
	public String getServletContextNames();

	/**
	 * Sets the servlet context names of this s p i definition.
	 *
	 * @param servletContextNames the servlet context names of this s p i definition
	 */
	public void setServletContextNames(String servletContextNames);

	/**
	 * Returns the type settings of this s p i definition.
	 *
	 * @return the type settings of this s p i definition
	 */
	@AutoEscape
	public String getTypeSettings();

	/**
	 * Sets the type settings of this s p i definition.
	 *
	 * @param typeSettings the type settings of this s p i definition
	 */
	public void setTypeSettings(String typeSettings);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(SPIDefinition spiDefinition);

	@Override
	public int hashCode();

	@Override
	public CacheModel<SPIDefinition> toCacheModel();

	@Override
	public SPIDefinition toEscapedModel();

	@Override
	public SPIDefinition toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}